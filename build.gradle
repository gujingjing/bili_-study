//apply dependencies
def root = file('dependencies.gradle')
if (!root.exists()) throw new GradleException('unexpected behavior!')
if (file('dependencies.gradle').exists()) {
    apply from: 'dependencies.gradle'
}

buildscript {
    repositories {
        maven { url 'https://maven.aliyun.com/repository/public/' }
        maven { url 'https://maven.aliyun.com/repository/google/' }
        maven { url 'https://maven.aliyun.com/repository/jcenter/' }
        mavenLocal()
        //rxjava
        maven { url 'https://oss.jfrog.org/libs-snapshot' }
        google()
        jcenter()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:${version_build_gradle}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$version_kotlin"
        //didi dokit
        classpath 'com.didichuxing.doraemonkit:doraemonkit-plugin:3.2.0'
        //hugo
        classpath 'com.jakewharton.hugo:hugo-plugin:1.2.1'
    }
}

//module repo path
def localModelRepoPath = "$rootProject.projectDir.absolutePath/repoLibs/"
allprojects {
    repositories {
        maven { url 'https://maven.aliyun.com/repository/public/' }
        maven { url 'https://maven.aliyun.com/repository/google/' }
        maven { url 'https://maven.aliyun.com/repository/jcenter/' }
        maven { url localModelRepoPath }
        //rxjava
        maven { url 'https://oss.jfrog.org/libs-snapshot' }
        mavenLocal()
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}